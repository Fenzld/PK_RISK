package AllThoseTerritories;


import java.awt.*;
import java.io.BufferedReader;
import java.util.*;
import java.util.List;
import java.io.IOException;
import java.io.FileReader;


public class Main {

    public static Polygon createPoly(String s) {
        Polygon p = null;
        int[] x;
        int[] y;
        String[] temp = new String[]{};
        String nameOfPatch = "";
        String coordinatesOfPatch = "";


        temp = s.split(" ");   //immer wenn ein abstand ist wird in einen neuen index gespeichert
        for (int k = 0; k < temp.length; k++) {
            if (!temp[k].matches("\\d+")) { // schaut ob es nicht eine ziffer von 0-9 ist (also ob es text ist)
                nameOfPatch += temp[k] + " ";
            } else {
                coordinatesOfPatch += temp[k] + ";";
                String[] coords = new String[]{};
                coords = coordinatesOfPatch.split(";");
                x = new int[coords.length / 2];
                y = new int[coords.length / 2];
                for (int i = 0, j=1, xyIndex=0; i < coords.length-1; i +=2,j+=2, xyIndex++) { //-1 da k einen index vorraus ist
                    x[xyIndex] = Integer.valueOf(coords[i]);
                    y[xyIndex] = Integer.valueOf(coords[j]);
                }
                p = new Polygon(x, y, x.length);
            }
        }
        return p;
    }

    public static Map<String, String> neighbours(String s) {
        Map<String, String> neighboursMap = new TreeMap<String, String>();

        return neighboursMap;
    }

    public static void capital(String s) {
    }

    public static void continent(String s) {
    }


    public static void main(String[] args) {
        String line = "";
        Polygon p = null;
        List<Polygon> polyList = new LinkedList<Polygon>();
        Map<String, String> neighboursMap = new TreeMap<String, String>();


        try {

            BufferedReader br = new BufferedReader(new FileReader("world.map"));
            while ((line = br.readLine()) != null) {
                if (line.contains("patch-of")) {
                    polyList.add(createPoly(line));
                }
                if (line.contains("neighbors-of")) {
                    neighboursMap = neighbours(line);
                }
                if (line.contains("capital-of")) {
                    capital(line);
                }
                if (line.contains("continent")) {
                    continent(line);
                }
            }
            br.close();
            new Frame(polyList).setVisible(true);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


}
