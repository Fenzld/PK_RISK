package AllThoseTerritories;

import java.awt.*;
import javax.swing.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.imageio.*;
import java.io.*;

/*
public class Panel extends JPanel implements MouseListener, MouseMotionListener {
    private List<Polygon> t;
    private Graphics _g;
    private World _Continents;
    private gamestate _currentstate;
    private List<Player> _curPlayers;
    Player one ;
    Player KI ;
    Color c;
    boolean begin;
    boolean working;
    private Image backgroundImage;
    JLabel _troopslabel;
    boolean playersetfigures = false;
    public Panel(World Continents)
    {
        this.setSize(1250,650);
        this.setLayout(null);
        _Continents = Continents;
        this.addMouseListener(this);
        _curPlayers = new ArrayList<Player>();
        one = new Player("Dominik",21,Color.blue);
        KI = new Player("KI",21,Color.red);

        _troopslabel = new JLabel("Troops: " + one.get_Figures());
        _troopslabel.setFont(new Font("Verdana", 1, 20));
        _troopslabel.setLocation(990,570);
        _troopslabel.setSize(250,50);
        this.add(_troopslabel);

        c = Color.lightGray;
        begin = true;
        working = false;
        begingame();

        try {
            backgroundImage = ImageIO.read(new File("sea_bg.png"));
        }
        catch (IOException e) {
            e.printStackTrace();
        }
        this.validate();
        this.repaint();
    }
    public enum gamestate
    {
        begin,normal,end,setfigures;
    }

    private void begingame()
    {
        _curPlayers.add(one);
        _curPlayers.add(KI);
        _currentstate = gamestate.begin;
    }

    @Override
    protected void paintComponent(Graphics g){

        List<String> alreadypainted = new ArrayList<String>();
        _g = g;
        super.paintComponent(g);
        g.drawImage(backgroundImage, 0, 0, this);
        g.setColor(Color.BLUE);
            for (ContinentPatch p : _Continents.get_Allcontinentpatchess())
            {
                g.setColor(Color.BLACK);
                g.drawPolygon(p.get_ContinentPatch());
            }

            for(Player p : _curPlayers) {
                g.setColor(p.get_Color());
                for (ContinentPatch cpatch : _Continents.getContinentPatchesfromPlayer(p.get_name())) {
                    alreadypainted.add(cpatch.get_Name());
                    g.fillPolygon(cpatch.get_ContinentPatch().xpoints, cpatch.get_ContinentPatch().ypoints, cpatch.get_ContinentPatch().npoints);
                }
            }
        for (ContinentPatch p : _Continents.get_Allcontinentpatchess())
        {
            if(!alreadypainted.contains(p.get_Name()))
            {
                g.setColor(c);
                g.fillPolygon(p.get_ContinentPatch().xpoints, p.get_ContinentPatch().ypoints, p.get_ContinentPatch().npoints);

            }
        }


    }

    @Override
    public void mouseClicked(MouseEvent a)
    {
        for(ContinentPatch tmp : _Continents.get_Allcontinentpatchess())
        {
            if(tmp.get_ContinentPatch().contains(a.getX(),a.getY()))
            {
                switch (_currentstate)
                {
                    case begin:
                        begin(tmp,one,KI);
                        break;

                    case normal:

                        break;
                    case end:
                        break;

                    case setfigures:
                        setfigures(tmp,one,KI);
                        break;
                }

            }
        }
        _troopslabel.setText("Troops: " + one.get_Figures());
    }

    private void NormalGame()
    {

    }

    private void setfigures(ContinentPatch toconqu,Player p,Player ki)
    {
        String Figurecount = "";
        if(toconqu.get_owner().equals(p.get_name()))
            Figurecount = JOptionPane.showInputDialog(null, toconqu.get_Name() + " troops: " + toconqu.get_figuresonpatch(), "How many figures do you want to set ?");

            if(Figurecount != "" && Figurecount != null)
            {
                int figureset = 0;
                try
                {
                    figureset = Integer.parseInt(Figurecount);
                    if(!_Continents.besetzen(toconqu.get_Name(),p,figureset,false))
                        JOptionPane.showMessageDialog(null, "You dont have enough troops!");
                }
                catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Invalid input");
                }
            }
        // _troopslabel.setText("Troops: " + p.get_Figures());


        if(playersetfigures)
        {
            _currentstate = gamestate.normal;
        }

    }

    private void begin(ContinentPatch toconqu,Player p,Player ki)
    {
        boolean found = false;
        if(!_Continents.checkifallcontinentsareconquered())
        {
            //Player setzt eine figur auf die gewünschte position, muss noch angepasst werden, wie viele figuren.
            if(!working)
            {
                if(_Continents.besetzen(toconqu.get_Name(),p,1,true))
                {
                   // _troopslabel.setText("Troops: " + one.get_Figures());
//                _g.setColor(p.get_Color());
//                _g.fillPolygon(toconqu.get_ContinentPatch().xpoints,toconqu.get_ContinentPatch().ypoints,toconqu.get_ContinentPatch().npoints);
//                paintComponent(_g);
//                validate();
                    repaint();
                    //worked
                    //System.out.println(p.get_name() + " Conquered " + toconqu.get_Name());
                    while(!found)
                    {
                        working = true;
                        //Double tmp = Math.random() * 10;
                        //Integer rnd = tmp.intValue();
                        Random rn = new Random();
                        int rnd = rn.nextInt(_Continents.get_Allcontinentpatchess().size());
                        if(rnd < _Continents.get_Allcontinentpatchess().size())
                        {
                            while(!_Continents.besetzen(_Continents.get_Allcontinentpatchess().get(rnd).get_Name(), ki, 1,true))
                            {
                                //tmp = Math.random() * 10;
                                rnd = rn.nextInt(_Continents.get_Allcontinentpatchess().size());
                            }

                            found = true;
                        }
                    }
                    repaint();
                    working = false;
                    if(_Continents.checkifallcontinentsareconquered())
                    {
                        System.out.println("All continents conquered");
                        _Continents.handoutfigures(one);
                        _Continents.handoutfigures(KI);
                        _currentstate = gamestate.setfigures;
                        _troopslabel.setText("Troops: " + one.get_Figures());
                    }

                }
            }

            //else
                //System.out.println("Select another continentpatch, this one is already owned.");
        }
        else
        {
            System.out.println("All continents conquered");
            _currentstate = gamestate.setfigures;
        }
    }
    @Override
    public void mouseExited(MouseEvent a){}
    @Override
    public void mouseReleased(MouseEvent a){}
    @Override
    public void mouseEntered(MouseEvent a){}
    @Override
    public void mousePressed(MouseEvent a){}
    @Override
    public void mouseDragged(MouseEvent e) {

    }

    @Override
    public void mouseMoved(MouseEvent e)
    {

    }
}